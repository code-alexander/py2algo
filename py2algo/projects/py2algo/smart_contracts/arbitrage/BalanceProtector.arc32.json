{
    "hints": {
        "new(account)void": {
            "call_config": {
                "no_op": "CREATE"
            }
        },
        "take_snapshot(asset)uint64": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "protect()uint64": {
            "call_config": {
                "no_op": "CALL"
            }
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDEwCgpzbWFydF9jb250cmFjdHMuYXJiaXRyYWdlLmNvbnRyYWN0LkJhbGFuY2VQcm90ZWN0b3IuY2xlYXJfc3RhdGVfcHJvZ3JhbToKICAgIC8vIHNtYXJ0X2NvbnRyYWN0cy9hcmJpdHJhZ2UvY29udHJhY3QucHk6MTgKICAgIC8vIGNsYXNzIEJhbGFuY2VQcm90ZWN0b3IoQVJDNENvbnRyYWN0KToKICAgIGludCAxCiAgICByZXR1cm4K"
    },
    "state": {
        "global": {
            "num_byte_slices": 1,
            "num_uints": 2
        },
        "local": {
            "num_byte_slices": 0,
            "num_uints": 0
        }
    },
    "schema": {
        "global": {
            "declared": {
                "asset": {
                    "type": "uint64",
                    "key": "asset"
                },
                "owner": {
                    "type": "bytes",
                    "key": "owner"
                },
                "starting_balance": {
                    "type": "uint64",
                    "key": "starting_balance"
                }
            },
            "reserved": {}
        },
        "local": {
            "declared": {},
            "reserved": {}
        }
    },
    "contract": {
        "name": "BalanceProtector",
        "desc": "Fails a group of transactions if the owner's account balance ends lower than it starts.",
        "methods": [
            {
                "name": "new",
                "args": [
                    {
                        "type": "account",
                        "name": "owner"
                    }
                ],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "take_snapshot",
                "args": [
                    {
                        "type": "asset",
                        "name": "asset",
                        "desc": "The asset to snapshot the balance of."
                    }
                ],
                "returns": {
                    "type": "uint64",
                    "desc": "The round the snapshot was taken in."
                },
                "desc": "Stores a snapshot of the owner's balance in the contract's global state."
            },
            {
                "name": "protect",
                "args": [],
                "returns": {
                    "type": "uint64",
                    "desc": "The balance delta."
                },
                "desc": "Fails if the owner's balance is lower than it was at the snapshot round."
            }
        ],
        "networks": {}
    },
    "bare_call_config": {}
}